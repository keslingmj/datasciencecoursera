plot(1: nosim, x, type = "l", xlab = "Iteration", ylab = "Average", frame = FALSE) abline(h = 0, lty = 2)
plot(1: nosim, x, type = "l", xlab = "Iteration", ylab = "Average", frame = FALSE)
plot(1: nosim, x, type = "l", xlab = "Iteration", ylab = "Average", frame = FALSE)
abline(h=0, ltr = 2)
?qtiles
?qtile
?qchisq
ls()
rm(list=ls())
ls()
s2 <- 105.977^2
s2
n <- 513
alpha <- .05
qtiles <- qchisq(c(alpha/2, 1 - alpha/2), n-1)
qtiles
ival <- rev((n-1)*s2 / qtiles)
ival
sqrt(ival)
?qt
seq(0,1,length =20)
seq(0,1,length =10)
seq(0,1,length =11)
seq(0,1,length =21)
data(islands)
stem(log10(islands))
warnings()
data(InspectSprays)
boxplot(rt(500,2))
data(faithful)
d <- density(faithful($eruptions, bw = "sj"))
d <- density(faithful$eruptions, bw = "sj"))
d <- density(faithful$eruptions, bw = "sj")
plot(d)
library(mass)
library(MASS)
data(caith)
caith
mosaicplot(caith, color=topo.colors(4), main = "Mosaic plot")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases"); dbDisconnect(ucscDb);
result
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
gamma(4)
gamma(3)
gamma(5)
gamma(2)
gamma(1)
gamma(0)
gamma(6)
gamma(7)
?pgamma
pgamma(16,4,.5)
pgamma(1,2)
1- pgamma(1,2)
1- pgamma(4,1.6,.5)
pgamma(5,2,.5)
c <- seq(0,1,length=100)
c
dbeta(c,1)
dbeta(c,1,1)
d <- dbeta(c,1,1)
plot(c,d)
d <- dbeta(c,2,1)
plot(c,d)
d <- dbeta(c,1,2)
plot(c,d)
d <- dbeta(c,2,2)
plot(c,d)
d <- dbeta(c,4,2)
plot(c,d)
d <- dbeta(c,14,2)
plot(c,d)
d <- dbeta(c,2,10)
plot(c,d)
d <- dbeta(c,1,10)
plot(c,d)
d <- dbeta(c,1,2)
plot(c,d)
?dbeta
d <- dbeta(c,2,14)
plot(c,d)
pbeta(.95,4,.333)
pbeta(.95,4,3)
?pbeta
pbeta(.5,4,3)
qbeta(.95,4,3)
pbeta(.4,3,2)
1- pbeta(.4,3,2)
dbListFields(hg19,"affyU133Plus2")
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
warnings(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
head affyMis
head(affyMis)
length(affyMis)
nrows(affyMis)
dim(affyMis)
str(affyMis)
affyMisSmall <- fetch(query,n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "bar")
created = h5createGroup("example.h5", "foo/foobar")
h5ls("example.h5")
A = matrix(1:10, nr=5,nc=2)
h5write(A, "example.h5", "foo/A")
b = array(seq(0.1,2,0,by=0.1), dim(c(5,2,2)))
B = array(seq(0.1,2.0,by=0.1), dim(c(5,2,2)))
B = array(seq(0.1,2.0,by=0.1), dim=c(5,2,2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5", "foo/foobar/B")
h5ls("example.h5")
df = data.frame(1L:5L, seq(0,1,length.out= 5))
df = data.frame(1L:5L, seq(0,1,length.out= 5), c("ab", "cde", "fghi", "a", "s"),)
df = data.frame(1L:5L, seq(0,1,length.out= 5), c("ab", "cde", "fghi", "a", "s"), stringsAsFactors=FALSE)
h5write(df, "example.h5", "df")
h5ls("example.h5")
readA = h5read("example.h5", "foo/A")
readB = h5read("example.h5", "foo/foobar/B")
readdf = h5read("example.h5", "df")
readA
readB
readdf
h5write(c(12,13,14), "example.h5", "foo/A", index=list(1:3,1))
h5read("example.h5", "foo/A")
h5read("example.h5", "foo/A", index=1:4,1:2)
h5read("example.h5", "foo/A", index=c(1:4,1:2))
h5read("example.h5", "foo/A", index=list(1:4,1:2))
H5close()
h5read("example.h5", "foo/A", index=list(1:4,1:2))
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
con  <-  url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
library(XML)
url <- ("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
html<- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
library(httr); html2 = GET(url)
content2 = content(html2, as="text")
parsedHtml = htmlParse(content2, asText=TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
parsedHtml
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg2 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user","passwd"))
pg2
names(pg2)
google = handle("http://google.com")
pg1 = GET(handle=google, path="/")
pg1
pg2 = GET(handle=google, path"search")
pg2 = GET(handle=google, path="search")
source('~/coursera/get_clean_data/Q2_q1.R')
install.packages("httr")
install.packages("httr")
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
git clone git@github.com:noahhl/oauth.git
git  git@github.com:noahhl/oauth.git
git
install.packages("git")
install.packages("rgit")
install.packages("Rgit")
source('~/coursera/get_clean_data/Q2_q1.R')
search()
source('~/coursera/get_clean_data/Q2_q1.R')
source()
search()
sign_oauth1.0
?homeTL
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
req
homeTL
source('~/coursera/get_clean_data/Q2_q1.R')
homeTL
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
homeTL
source('~/coursera/get_clean_data/Q2_q1.R')
json1
source('~/coursera/get_clean_data/Q2_q1.R')
install.packages("rjson")
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
install.packages("rjsonio")
install.packages("RJSONIO")
source('~/coursera/get_clean_data/Q2_q1.R')
json1
source('~/coursera/get_clean_data/Q2_q1.R')
?jsonlite
source('~/coursera/get_clean_data/Q2_q1.R')
json2
source('~/coursera/get_clean_data/Q2_q1.R')
install.packages("jsonlite")
install.packages("jsonlite")
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1.R')
traceback()
source('~/coursera/get_clean_data/Q2_q1.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
print(json1)
source('~/coursera/get_clean_data/Q2_q1_2.R')
json1
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
update.packages()
version()
version
packageStatus()
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
install.packages("httpuv")
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
json1
dim(json1)
class(json1)
xmlName(rootNode)
xmlName(json1)
source('~/coursera/get_clean_data/Q2_q1_2.R')
xmlTreeParse(json1)
json1$XMLAbstractDocument
header(json1)
head(json1)
json1$XMLInternalDocument
toJSON(json1)
json1
?attr
str(json1)
subsetting(json1)
json1[[1]]
json1[1]
toJSON(json1)
json1
req
source('~/coursera/get_clean_data/Q2_q1_2.R')
x <- c(1,2,pi)
cat(toJSON(x))
json1$class
install.packages("reshape2")
library(reshape2)
reshape2::melt(json1)
source('~/coursera/get_clean_data/Q2_q1_2.R')
json1
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
source('~/coursera/get_clean_data/Q2_q1_2.R')
install.packages("sqldf")
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
?data.frame
source('~/Q2_q2.R')
acs
str(acs)
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
AGEP
pwgtp
pwgtp1
AGEP
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
?read.csv.sql
source('~/Q2_q2.R')
source('~/Q2_q2.R')
install.packages("SQLite")
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
?as
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q2.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
?htmlParse
source('~/Q2_q4.R')
source('~/Q2_q4.R')
?nchar
source('~/Q2_q4.R')
?split
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
?readLines
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
?system2
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/Q2_q4.R')
source('~/coursera/get_clean_data/Q2_q4.R')
source('~/coursera/get_clean_data/Q2_q4.R')
setwd("~/coursera/get_clean_data")
source('~/coursera/get_clean_data/Q2_q4.R')
source('~/coursera/get_clean_data/Q2_q4.R')
source('~/coursera/get_clean_data/Q2_q4.R')
source('~/coursera/get_clean_data/Q2_q4.R')
source('~/coursera/get_clean_data/Q2_q4.R')
source('~/coursera/get_clean_data/Q2_q4.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
?read.table
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
?read.fwf
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
source('~/coursera/get_clean_data/Q2_q5.R')
getwd()
setwd("/Users//mjk/coursera/DST")
getwd()
mkdir data
mkdir ../data
install.packages(KernSmooth)
install.packages("KernSmooth"")
